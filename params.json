{"name":"Example tmux configuration","tagline":"Starter config with screen + vim key-bindings, system stat, cpu load bar.","body":"[Tmux](http://tmux.sourceforge.net/) is a terminal multiplexer. Tested with tmux 1.5+.\r\n\r\nThis config has support for [tmux-mem-cpu](http://github.com/thewtex/tmux-mem-cpu-load).\r\n\r\nPrefix mapped to Ctrl-A for `screen` users.\r\n\r\nInstallation\r\n------------\r\n\r\n  Download:\r\n\r\n```bash\r\ngit clone https://github.com/tony/tmux-config.git ~/.tmux\r\n```\r\n\r\n  Copy tmux config to home:\r\n\r\n```bash\r\nln -s ~/.tmux/.tmux.conf ~/.tmux.conf\r\n```\r\n\r\n  Go to config dir:\r\n\r\n```bash\r\ncd ~/.tmux\r\n```\r\n\r\nStats\r\n-----\r\n\r\n### tmux-mem-cpu-load\r\n\r\n(Linux-only)\r\n\r\n  Prep ourself to download submodule:\r\n\r\n```bash\r\ngit submodule init\r\n```\r\n\r\n  Download submodule:\r\n\r\n```bash\r\ngit submodule update\r\n```\r\n\r\n  Change dir to tmux-mem-cpu-load:\r\n\r\n```bash\r\ncd ~/.tmux/vendor/tmux-mem-cpu-load\r\n```\r\n\r\n  General make file:\r\n\r\n```bash\r\ncmake .\r\n```\r\n\r\n  Compile our binary:\r\n\r\n```bash\r\nmake\r\n```\r\n\r\n  Install our binary to `/usr/local/bin/tmux-mem-cpu-load`:\r\n\r\n```bash\r\nsudo make install\r\n```\r\n\r\n  Go home:\r\n\r\n```bash\r\ncd ~\r\n```\r\n\r\n  Launch tmux:\r\n```\r\ntmux\r\n```\r\n  And press `Control + a` then `d` to go back to the terminal.\r\n\r\n  Update config:\r\n\r\n```bash\r\ntmux source-file ~/.tmux.conf\r\n```\r\n\r\n### basic-cpu-and-memory.tmux\r\n\r\n(Cross platform, tested with python 2.7+)\r\n\r\nUpdate March 19, 2014. Works with psutil 2.0 now.\r\n\r\nInstall ``psutil``:\r\n\r\n```bash\r\nsudo pip install psutil\r\n```\r\n\r\ncopy ``~/.tmux/vendor/basic-cpu-and-memory.tmux`` to bin:\r\n\r\n```bash\r\nsudo cp ~/.tmux/vendor/basic-cpu-and-memory.tmux /usr/local/bin/tmux-mem-cpu-load\r\n```\r\n\r\nmake executable:\r\n```bash\r\nsudo chmod +x /usr/local/bin/tmux-mem-cpu-load\r\n```\r\n\r\n### Powerline (Advanced)\r\n\r\nYou can add suport for [powerline](https://github.com/powerline/powerline) by adding these\r\nto your ``~/.tmux.conf``. Be sure to grab and install [powerline-fonts](https://github.com/powerline/fonts)\r\nfor your system.\r\n\r\nSee [Powerline on ReadTheDocs.org](https://powerline.readthedocs.org/en/master/) for more info.\r\n\r\n```\r\n# pip install --user git+git://github.com/powerline/powerline\r\nif-shell 'test -f ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' 'source-file ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'\r\n\r\n# [sudo] pip install git+git://github.com/powerline/powerline\r\nif-shell 'test -f /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'\r\n\r\n# [sudo] pip install git+git://github.com/powerline/powerline\r\nif-shell 'test -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf'\r\n# using python3.3\r\nif-shell 'test -f /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf'\r\n# python 3.4?\r\n# if-shell 'test -f /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf'\r\n```\r\n\r\nStart tmux\r\n----------\r\n\r\nTo start a session:\r\n\r\n`tmux`\r\n\r\nTo reattach a previous session:\r\n\r\n`tmux attach`\r\n\r\nTo reload config file\r\n\r\n`<Control + b>:` (which could Ctrl-B or Ctrl-A if you overidden it) then `source-file ~/.tmux.conf`\r\n\r\nCommands\r\n--------\r\n\r\nOur prefix/leader key is `Control + a` now (just like the `screen` multiplexer). This sequence must be typed before any tmux shortcut.\r\n\r\n* `Control + a` before any command\r\n* `Control + a` then `?` to bring up list of keyboard shortcuts\r\n* `Control + a` then `\"` to split window\r\n* `Control + a` then `<Space>` to change pane arrangement\r\n* `Control + a` then `o` to rotate panes\r\n* `Control + a` then `h`, `j`, `k`, `l` to move left, down, up, right. Respectively. (vim hjkl)\r\n* `Control + a` then `;` to go to last panel\r\n\r\nBeyond your first window:\r\n\r\n* `Control + a` then `c` to create a new window\r\n* `Control + a` then `n` to next window\r\n* `Control + a` then `p` to previous window\r\n* `Control + a` then `[0-9]` move to window number\r\n* `Control + a` then `&` to kill window\r\n\r\nCustom:\r\n\r\n* `Control + a` then `m` to switch to ``main-horizontal`` layout with the main window at 60% height.\r\n\r\nMore configs / Tools\r\n--------------------\r\n\r\n* *Save / Load your tmux workspaces through JSON or YAML* with [tmuxp](https://github.com/tony/tmuxp).\r\n* *Clone + Synchronize your git / hg / svn projects through JSON / YAML* with [vcspull](https://github.com/tony/vcspull).\r\n* *Modular, Lazy-loading vim configuration* with support for C, C++, Python, Go and Javascript with [tony/vim-config](https://github.com/tony/vim-config)\r\n* *Modular dot-config example* [tony/.dot-config](https://github.com/tony/.dot-config)\r\n\r\nOther\r\n-----\r\n\r\n* Github: http://www.github.com/tony\r\n* Website: http://www.git-pull.com\r\n* LICENSE: MIT\r\n* Author: Tony Narlock (tony@git-pull.com)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}